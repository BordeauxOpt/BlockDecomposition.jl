# BaPCod's parameters file
#
# Variables with true or false value are boolean
# Variable with decimal or in scientific form are double or float (if mentioned)
# Other numeric variable are int or long int (if mentioned).
# One character is a character
# More than one alpha numeric characters could be a string
# Multiple tockens in an option are separated by a comma

# -- Output level

DEFAULTPRINTLEVEL = 0

# CheckOracleOptimality = true
# CheckSpOracleFeasibility = true
# -- Limits

GlobalTimeLimitInTick = 190000 # 2 hours
MaxNbOfBBtreeNodeTreated = 10000
#MaxNbOfBBtreeNodeTreated = 1

# -- Solver

solverName = CPLEX_SOLVER

# -- Solution mode

ovfSolMode = 0 # no original formulation will be created and solved
masterSolMode =  1 # Undefined = -1, None = 0, LpSolver = 1, MipSolver = 2
SolverSelectForMast = a # automatic LP solver is used

# -- Master initialisation

UseInitialPrimalHeur = false
mastInitMode = 3 # master will be initialized with the local artificial variables only
ApplyPreprocessing = false

# -- Column generation and management

colGenSubProbSolMode = 2  # pricing problem will be solved by the MIP solver
GenerateProperColumns = false
ColumnCleanupThreshold = 10000

# -- Branching

ApplyStrongBranchingEvaluation = false
StrongBranchingParameter4MaxNbOfCandidates = 10

# -- Heuristics

UseDivingHeur = false
UseRestrictedMasterIpHeur = false

# -- Stabilization

# StabilizationFunction = 2 # default = none = 0, box step = 1, 3-piece = 2, 5-piece = 3, bundle = 4
# StabilFuncKappa = 1 # initial curvature of the penalty function (default is 1)

# DualPriceSmoothingAlphaFactor = 0 # dual price smoothing is not used
# DualPriceSmoothingBetaFactor = 0 # additional directional dual price smoothing is not used

# The selected fields of cpu times (must at least include total cpu time= bcTimeMain);
timeKeySet =  bcTimeMastMPsol bcTimeSpSol bcTimeOvfMPsol bcTimeMain

# bcTimeMastMPsol = total time spent at solving Master Math Programming Formulation;
# bcTimeSpSol = total time spent at solving SubProblems including solution recording;
# bcTimeOvfMPsol = total time spent at solving original Math Programming Formulation;
# bcTimeMain = overall total time;

# The selected fields in sorted order (in any case lines start with prName and ends with total cpu time;
outputKeyVector= bcCountNodeProc bcRecRootDb bcRecBestDb bcRecBestInc bcCountMastSol bcCountSpSol bcCountCol bcMaxNbColInMastLp bcTimeMastMPsol bcTimeSpSol

# bcCountNodeProc = number of BaP processed
# bcRecRootDb = Dual Bound on exiting root node;
# bcRecBestDb = Best Dual Bound on exiting program;
# bcRecBestInc = Best Incumbent solution on exiting program;
# bcCountMastSol = number of master LPs that have been solved
# bcCountSpSol = number of SubProblems that have been solved
# bcCountCol = number of columns generated dynamically
# bcMaxNbColInMastLp = maximum number of columns in the master LP at any node of the Branch-and-Price procedure
